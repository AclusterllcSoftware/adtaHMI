<%- include('header', {currentMenu: 'maint-motors', pageTitle: 'Motors'}); %>
<div class="row mt-3">
<!--    <div class="col-lg-12">-->
<!--        <table class="table table-sm table-bordered table-striped">-->
<!--            <thead>-->
<!--            <tr>-->
<!--                <th>Motor ID</th>-->
<!--                <th>Motor name</th>-->
<!--                <th>Motor location</th>-->
<!--                <th>IP Address</th>-->
<!--                <th>Speed</th>-->
<!--                <th>Connection Status</th>-->
<!--                <th>Fault</th>-->
<!--                <th></th>-->
<!--            </tr>-->
<!--            </thead>-->
<!--            <tbody id="table-motors"></tbody>-->
<!--        </table>-->
<!--    </div>-->
</div>
<div class="row mt-3">
    <div class="col-lg-12">
        <table class="table table-sm table-bordered table-striped" id="motor_table">
            <thead>
            <tr>
                <th width="65px" style="text-align: right">Motor ID</th>
                <th>Motor name</th>
                <th>Motor location</th>
                <th>IP Address</th>
                <th>Speed</th>
                <th width="130px">Connection Status</th>
                <th width="130px">Fault</th>
                <th></th>
            </tr>
            </thead>
            <tbody id="motor_table"></tbody>
        </table>
    </div>
</div>
</div>
<style>
    .table-striped > tbody > tr:nth-child(even) > td {
        background-color: #bfdbfe;
    }

    .table-striped > tbody > tr:nth-child(odd) > td {
        background-color: #fff;
    }

    .table-striped > thead > tr > th {
        background-color: #e2e8f0;
    }
</style>
<%- include('footer', {currentMenu: 'maint-motors'}); %>

<script src="js/jquery-bootstrap.js"></script>
<script src="js/jquery.newsTicker.js"></script>
<script src="js/daterangepicker/moment.min.js"></script>
<script src="js/datatables/datatables.js"></script>
<script src="js/jszip.min.js"></script>
<script src="js/datepicker/bootstrap-datepicker.min.js"></script>
<script src="js/nav.js"></script>


<script>
    let basic_info = {}, motors = [], motor_speed_unit = '', inputs_info = [];
    let data_table;
    let machine_mode;

    jQuery(document).ready(function () {
        jQuery("#ip_list_dropdown").change(function () {
            selected_machine = jQuery(this).val();
            if (selected_machine !== "") {
                let selected_machine_name = machine_list[selected_machine];
                jQuery("#display_machine_name").text(selected_machine_name);
            } else {
                jQuery("#display_machine_name").text("Select a machine");
                selected_machine = 0;
            }
            ipcRenderer.send("get:views", selected_machine, "maint-motors");
        });

        data_table = jQuery('#motor_table').DataTable({
            dom: 'Bfrtip',
            paging: false,
            buttons: [
               ],
            "columns": [
                { "orderable": true, className: 'text-right' },
                null,
                null,
                { "orderable": false },
                { "orderable": false },
                { "orderable": false },
                { "orderable": false },
                { "orderable": false }
            ],
            "order": [],

        });
    });
    ipcRenderer.on("render:maint-motors", function (e, data) {
        data_table.clear().search( '' ).columns().search( '' ).draw();
        console.log(data)
        let motors_html = '';
        basic_info = data;

        motor_speed_unit = basic_info['hmiSettings']['motor_speed_unit'];
        inputs_info = basic_info['inputsInfo'];
        motors = Object.values(basic_info['motorsInfo']);
        motors.sort((a, b) => a.device_id - b.device_id);
        motors.map(d => ({
            ...d,
            speed: '0 m/s',
            connection_status: 0,
            fault_status: 0,
        })).forEach(d => {
            data_table.row.add([
                d.motor_id,
                d.motor_name,
                d.location,
                d.ip_address,
                '<span class="speed-row" data-id='+d.motor_id+ '>'+d.speed+'</span>',
                (d.connection_status === 1 ?
                        '<span' + ' data-id=' + d.motor_id + 'class="conn-state" style="background-color: #4fe21f; width: 12px;height: 12px; display: inline-flex"></span>'
                        : '<span' + ' data-id=' + d.motor_id + ' class="conn-state" style="background-color: #9e9e9e; width: 12px;height: 12px; display: inline-flex"></span>'
                ),
                (d.fault_status === 1 ?
                        '<span' + ' data-id=' + d.motor_id + 'class="fault-state" style="background-color: #4fe21f; width: 12px;height: 12px; display: inline-flex"></span>'
                        : '<span' + ' data-id=' + d.motor_id + ' class="fault-state" style="background-color: #9e9e9e; width: 12px;height: 12px; display: inline-flex"></span>'
                ),
                '<div class="d-inline-flex speed_control_input">' +
                '<input type="text" class="form-control ' + 'motor-' + d.motor_id +'"' + 'style="width: 80px">' +
                '<button' + ' data-motor-id=' + d.motor_id + ' type="button" class="btn btn-primary btn-sm button_start" style="font-size: 12px;padding-left: 12px; padding-right: 12px; padding-top: 1px; padding-bottom: 1px; margin-right: 4px;">Start</button>' +
                '<button' + ' data-motor-id=' + d.motor_id + ' type="button" class="btn btn-danger btn-sm button_stop" style="font-size: 12px;padding-left: 12px; padding-right: 12px; padding-top: 1px; padding-bottom: 1px;">Stop</button>' +
                '</div>'
            ])
            // motors_html += '<tr>' +
            //     '<td>' +
            //     d.motor_id +
            //     '</td>' +
            //     '<td>' +
            //     d.motor_name +
            //     '</td>' +
            //     '<td>' +
            //     d.location +
            //     '</td>' +
            //     '<td>' +
            //     d.ip_address +
            //     '</td>' +
            //     '<td class="speed-row"' + ' data-id=' + d.motor_id + '>' +
            //     d.speed +
            //     '</td>' +
            //     "<td>" +
            //     (d.connection_status === 1 ?
            //             '<span' + ' data-id=' + d.motor_id + 'class="conn-state" style="background-color: #4fe21f; width: 12px;height: 12px; display: inline-flex"></span>'
            //             : '<span' + ' data-id=' + d.motor_id + ' class="conn-state" style="background-color: #9e9e9e; width: 12px;height: 12px; display: inline-flex"></span>'
            //     ) +
            //     "</td>" +
            //     "<td>" +
            //     (d.fault_status === 1 ?
            //             '<span' + ' data-id=' + d.motor_id + 'class="fault-state" style="background-color: #4fe21f; width: 12px;height: 12px; display: inline-flex"></span>'
            //             : '<span' + ' data-id=' + d.motor_id + ' class="fault-state" style="background-color: #9e9e9e; width: 12px;height: 12px; display: inline-flex"></span>'
            //     ) +
            //     "</td>" +
            //     "<td>" +
            //     '<div class="d-inline-flex">' +
            //     '<input type="text" class="form-control ' + 'motor-' + d.motor_id +'"' + 'style="width: 80px">' +
            //     '<button' + ' data-motor-id=' + d.motor_id + ' type="button" class="btn btn-primary btn-sm button_start" style="font-size: 12px;padding-left: 12px; padding-right: 12px; padding-top: 1px; padding-bottom: 1px; margin-right: 4px;">Start</button>' +
            //     '<button' + ' data-motor-id=' + d.motor_id + ' type="button" class="btn btn-danger btn-sm button_stop" style="font-size: 12px;padding-left: 12px; padding-right: 12px; padding-top: 1px; padding-bottom: 1px;">Stop</button>' +
            //     '</div>'
            // "</td>"
            // "</tr>";
        });
        // jQuery("#table-motors").empty();
        // jQuery("#table-motors").append(motors_html);
        data_table.draw();

        $('.button_start').click(function () {
            let motorId = $(this).data('motorId'), inputVal = Number($('.motor-'+motorId).val()),
                selected_motor= motors.find(m=> m.motor_id == motorId);

            console.log(selected_motor)
            if(motor_speed_unit =='ft_min'){
                inputVal = inputVal *5.08;
            } else {
                inputVal= inputVal*1000;
            }
            inputVal = parseInt(inputVal);

            if(inputVal<selected_motor['speed_min'] || inputVal>selected_motor['speed_max']){
                return;
            } else {
                ipcRenderer.send("sendRequest", selected_machine,'sendDeviceCommand', {
                    'deviceId':motorId-1+101,
                    'command':1,
                    'parameter1':inputVal
                });
                $('.motor-'+motorId).val('')
            }
        });
        $('.button_stop').click(function () {
            let motorId = $(this).data('motorId');
            console.log(motorId);
            ipcRenderer.send("sendRequest", selected_machine, 'sendDeviceCommand', {
                'deviceId': motorId - 1 + 101,
                'command': 0,
                'parameter1': 0
            });
        });


        setInterval(() => {
            ipcRenderer.send("sendRequest", selected_machine,'getGeneralMotorsViewData', {});
        }, 1000);
        ipcRenderer.send("sendRequest", selected_machine, 'getGeneralMotorsViewData', {});
    });

    ipcRenderer.on("getGeneralMotorsViewData", function (e, data) {

        let motor_speeds = data['motorsCurrentSpeed'], device_states = data['devicesStates'],
            input_states = data['inputsStates'], activeAlarms = data['activeAlarms'];
        machine_mode=data['machineMode'];

        if(machine_mode!=1){
            $('.speed_control_input').children().hide();
        }

        let activeAlarmsStates = {};
        for (let i in activeAlarms) {
            let activeAlarm = activeAlarms[i];
            activeAlarmsStates[selected_machine + '_' + activeAlarm['alarm_id'] + '_' + activeAlarm['alarm_type']] = 1;
        }

        let speedRows = jQuery('.speed-row'), connRows = jQuery('.conn-state'),
            faultRows = jQuery('.fault-state');
        speedRows.each((key, elem) => {
            let rowId = $(elem)[0].dataset.id, motor = motors.find(m => m.motor_id == rowId);
            if (motor_speeds[motor.machine_id + "_" + motor.motor_id] !== undefined) {
                if (motor_speed_unit == 'ft_min') {
                    $(elem).text((motor_speeds[motor.machine_id + "_" + motor.motor_id] / 5.08).toFixed(2) + ' ft/min');
                } else {
                    $(elem).text(motor_speeds[motor.machine_id + "_" + motor.motor_id] / 1000 + ' m/s');
                }
            }

        });
        connRows.each((key, elem) => {
            let rowId = $(elem)[0].dataset.id, motor = motors.find(m => m.motor_id == rowId);

            let inputActive = false;
            if (motor.input_id > 0) {
                if (inputs_info[motor.machine_id + '_' + motor.input_id]) {
                    if ((input_states[motor.machine_id + '_' + motor.input_id]['input_state']) == inputs_info[motor.machine_id + '_' + motor.input_id]['active_state']) {
                        inputActive = true;
                    }
                }
            }
            if(motor['device_number']>0){
                if (device_states[motor.machine_id + "_" + motor['device_number']] !== undefined) {
                    if (device_states[motor.machine_id + "_" + motor['device_number']]['device_state'] == 1) {
                        $(elem).css('background-color', '#4fe21f');
                    } else {
                        $(elem).css('background-color', '#f43f5e');
                    }
                } else if(inputActive === true) {
                    $(elem).css('background-color', '#4fe21f');
                }
            }
        });
        faultRows.each((key, elem) => {
            let rowId = $(elem)[0].dataset.id, motor = motors.find(m => m.motor_id == rowId);
            let inputActive = false;
            let alarmActive = false;
            if (motor.input_id > 0) {
                if (inputs_info[motor.machine_id + '_' + motor.input_id]) {
                    if ((input_states[motor.machine_id + '_' + motor.input_id]['input_state']) == inputs_info[motor.machine_id + '_' + motor.input_id]['active_state']) {
                        inputActive = true;
                    }
                }
            }
            if (motor.alarm_id > 0) {
                if (activeAlarmsStates[selected_machine + '_' + motor.alarm_id + '_' + motor.alarm_type]) {
                    alarmActive = true;
                }
            }
            if (alarmActive) {
                $(elem).css('background-color', '#f43f5e');
            } else {
                if (inputActive == 1) {
                    $(elem).css('background-color', '#4fe21f');
                }
            }
        })


    });
</script>
