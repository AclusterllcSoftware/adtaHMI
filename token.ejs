<%- include('header', {currentMenu: 'token', pageTitle: 'Token'}); %>
<a id="top-to-button"></a>
<div class="row m-0 mt-2">
    <div class="col-lg-12 pt-0 pb-0 pl-2 pr-2">
        <h2 id="head-loader">Token</h2>
    </div>
</div>
<div class="row m-0 mt-2">
    <div class="col-lg-12 pt-0 pb-0 pl-2 pr-2">
        <form>
            <div class="row">
                <div class="col-md-9">
                    <div class="form-row" id="alert-div" style="display:none;">
                        <div class="col-md-12" id="alert-div-area"></div>
                    </div>
                    <div class="form-row">
                        <div class="col-md-4">
                            <h5>From</h5>
                        </div>
                        <div class="col-md-4">
                            <h5>To</h5>
                        </div>
                        <div class="col-md-4">

                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-md-2">
                            <input type="text" class="form-control" id="from_date" placeholder="From date">
                        </div>
                        <div class="col-md-1">
                            <select class="form-control" id="from_date_hour"></select>
                        </div>
                        <div class="col-md-1">
                            <select class="form-control" id="from_date_minute"></select>
                        </div>
                        <div class="col-md-2">
                            <input type="text" class="form-control" id="to_date" placeholder="To date">
                        </div>
                        <div class="col-md-1">
                            <select class="form-control" id="to_date_hour"></select>
                        </div>
                        <div class="col-md-1">
                            <select class="form-control" id="to_date_minute"></select>
                        </div>
                        <div class="col-md-2">
                            <select class="custom-select" id="filter_sorting_code">
                                <option value="na">Sorting code...</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <button type="button" class="btn btn-primary" id="filter_submit_btn2">Filter</button>
                            <input type="hidden" id="start_timestamp2">
                            <input type="hidden" id="end_timestamp2">
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>
<div class="row m-0 mt-2">
    <div class="col-lg-12 pt-0 pb-0 pl-2 pr-2">
        <table class="table table-sm table-bordered" id="token_table">
            <thead>
            <tr>
                <th width="20%">Timestamp</th>
                <th width="12%">PLC Id</th>
                <th width="10%">Length</th>
                <th width="12%">Barcode1</th>
                <th width="10%">SortedCode</th>
                <th width="12%">Destination</th>
                <th width="12%">FinalDestination</th>
            </tr>
            </thead>
            <tbody id="package_list_tbody">

            </tbody>
            <tfoot>
            <tr>
                <th>Timestamp</th>
                <th>PLC Id</th>
                <th>Length</th>
                <th>Barcode1</th>
                <th>SortedCode</th>
                <th>Destination</th>
                <th>FinalDestination</th>
            </tr>
            </tfoot>
        </table>
        <nav class="pt-1" id="page-nav">
            <ul class="pagination justify-content-end" id="page-wrapper">

            </ul>
        </nav>
    </div>
</div>
</div>
<style>
    #top-to-button{
        bottom: 72px!important;
    }
    #loading {
        display: inline-block;
        width: 50px;
        height: 50px;
        border: 3px solid rgba(255,255,255,.3);
        border-radius: 50%;
        border-top-color: #fff;
        animation: spin 1s ease-in-out infinite;
        -webkit-animation: spin 1s ease-in-out infinite;
    }
    @keyframes spin {
        to { -webkit-transform: rotate(360deg); }
    }
    @-webkit-keyframes spin {
        to { -webkit-transform: rotate(360deg); }
    }
</style>
<%- include('footer', {currentMenu: 'token'}); %>
<script src="js/jquery-bootstrap.js"></script>
<script src="js/datatables/datatables.js"></script>
<script src="js/jszip.min.js"></script>
<script src="js/daterangepicker/moment.min.js"></script>
<script src="js/datepicker/bootstrap-datepicker.min.js"></script>
<script src="js/jquery.newsTicker.js"></script>
<script src="js/nav.js"></script>
<script>
    let alarm_class_to_names = {"0": "Error", "1": "Warning", "2": "Message"};
    let data_table;
    let machine_mode = 9, end_time = null, start_time = null, filter_sorting_code=null;

    let sorting_codes = {}, current_page=1, total_records=null,per_page=500;

    function load_hour_minute_dropdowns() {
        let hours_html, minutes_html;
        for (var i = 0; i < 24; i++) {
            let v = i;
            if (i < 10) {
                v = "0" + i;
            }
            hours_html += '<option value="' + v + '">' + v + '</option>';
        }

        for (var i = 0; i < 60; i++) {
            let v = i;
            if (i < 10) {
                v = "0" + i;
            }
            minutes_html += '<option value="' + v + '">' + v + '</option>';
        }

        jQuery("#from_date_hour").html(hours_html);
        jQuery("#from_date_minute").html(minutes_html);
        jQuery("#to_date_hour").html(hours_html);
        jQuery("#to_date_minute").html(minutes_html);
    }

    function destination_to_bin(d) {
        let vd = d;
        if (d < 10) {
            if (d == 0) {
                vd = "02";
            } else {
                vd = "0" + d;
            }
        }

        return vd;
    }

    jQuery(document).ready(function () {

        load_hour_minute_dropdowns();

        var top_to_btn = $('#top-to-button');

        $(window).scroll(function () {
            if ($(window).scrollTop() > 300) {
                top_to_btn.addClass('show');
            } else {
                top_to_btn.removeClass('show');
            }
        });

        top_to_btn.on('click', function (e) {
            e.preventDefault();
            $('html, body').animate({scrollTop: 0}, '300');
        });

        jQuery("#filter_submit_btn2").click(function () {
            let date_ok = 1;
            let from_date = jQuery("#from_date").val();
            let from_date_hour = jQuery("#from_date_hour").val();
            let from_date_minute = jQuery("#from_date_minute").val();

            let to_date = jQuery("#to_date").val();
            let to_date_hour = jQuery("#to_date_hour").val();
            let to_date_minute = jQuery("#to_date_minute").val();

            if (from_date.trim().length === 0) {
                date_ok = 0;
            }

            if (to_date.trim().length === 0) {
                date_ok = 0;
            }

            if (date_ok === 0) {
                jQuery("#alert-div-area").empty();
                let alert_div_html = '<div class="alert alert-warning alert-dismissible fade show" role="alert">' +
                    '<strong id="alert-div-text">Please select dates correctly</strong>' +
                    '<button type="button" class="close" data-dismiss="alert" aria-label="Close">' +
                    '<span aria-hidden="true">&times;</span>' +
                    '</button>' +
                    '</div>';
                jQuery("#alert-div-area").html(alert_div_html);
                jQuery("#alert-div").show();
            } else {
                let from_date_time = from_date + " " + from_date_hour + ":" + from_date_minute;
                let to_date_time = to_date + " " + to_date_hour + ":" + to_date_minute;

                var from_timestamp = moment(from_date_time, "M-D-YYYY HH:mm").unix();
                var to_timestamp = moment(to_date_time, "M/D/YYYY HH:mm").unix();
                if (from_timestamp > to_timestamp) {
                    jQuery("#alert-div-area").empty();
                    let alert_div_html = '<div class="alert alert-warning alert-dismissible fade show" role="alert">' +
                        '<strong id="alert-div-text">Please select date times correctly</strong>' +
                        '<button type="button" class="close" data-dismiss="alert" aria-label="Close">' +
                        '<span aria-hidden="true">&times;</span>' +
                        '</button>' +
                        '</div>';
                    jQuery("#alert-div-area").html(alert_div_html);
                    jQuery("#alert-div").show();

                } else {
                    jQuery("#alert-div").hide();
                    filter_sorting_code = jQuery("#filter_sorting_code").val();
                    // ipcRenderer.send("get:filtered_package_list", selected_machine, from_timestamp, to_timestamp, filter_sorting_code);
                    ipcRenderer.send("sendRequest", selected_machine, 'getProductsHistory', {
                        'from_timestamp': from_timestamp,
                        'to_timestamp': to_timestamp
                    });
                }

            }

        });

        jQuery("#from_date").datepicker({
            autoclose: true,
            format: 'mm-dd-yyyy'
        });

        jQuery("#to_date").datepicker({
            autoclose: true,
            format: 'mm-dd-yyyy'
        });

        jQuery("#ip_list_dropdown").change(function () {
            selected_machine = jQuery(this).val();

            if (selected_machine !== "") {
                let selected_machine_name = machine_list[selected_machine];
                jQuery("#display_machine_name").text(selected_machine_name);
            } else {
                jQuery("#display_machine_name").text("Select a machine");
                selected_machine = 0;
            }

            // for (let k in sorting_codes) {
            //     jQuery("#filter_sorting_code").append('<option value="' + k + '">' + k + '</option>');
            // }
            ipcRenderer.send("status:ActiveAlarms", selected_machine);
            ipcRenderer.send("get:views", selected_machine, "token");
        });

        data_table = jQuery('#token_table').DataTable({
            dom: 'Bifrtp',
            paging: false,
            buttons: [
                {
                    extend: 'csv',
                    fieldSeparator: ";",
                    text: 'Export'
                }],
            "columns": [
                null,
                null,
                null,
                null,
                null,
                null,
                null
            ],
            "order": [],
        });
    });
    /* let destination_to_bin = {};
    for (let d=0; d < 54; d++) {
        let vd = d;
        if(d < 10) {
            if(d == 0) {
                vd = "02";
            } else {
                vd = "0" + d;
            }
        }

        destination_to_bin[d] = vd;
    } */


    //console.log(destination_to_bin);

    ipcRenderer.on("render:token", function (e, basic_info) {
        sorting_codes = basic_info['scsInfo'];
        for (let k in sorting_codes) {
            let sc = sorting_codes[k];
            jQuery("#filter_sorting_code").append('<option value="' + sc.value + '">' + sc.label + '</option>');
        }
        end_time = moment().unix();
        start_time = moment().subtract(6, 'days').unix();
        ipcRenderer.send("sendRequest", selected_machine, 'getProductsHistory', {
            'page':1,
            'per_page':per_page,
            'from_timestamp': start_time,
            'to_timestamp': end_time,
        });
    });

    ipcRenderer.on("getProductsHistory", function (e, data_result) {
        let total_pages=0, page_html='';
        data_table.clear().search('').columns().search('').draw();

        console.log(data_result);
        current_page = data_result['page'], total_records=data_result['totalRecords'];
        total_pages = Math.ceil(Number(total_records/data_result['per_page']));

        console.log(total_pages);
        let packages_result = data_result['products'], table_html='', products=[];

        if(filter_sorting_code !==null && filter_sorting_code!== 'na') {
            console.log(filter_sorting_code);
            packages_result = packages_result.filter(f=> f.reason ==Number(filter_sorting_code));
        }
        for (let k in packages_result) {
            let related_package_info = packages_result[k];

            let mail_id = Number(related_package_info['mail_id']),
                length = Number(related_package_info['length']),
                sorting_code = related_package_info['reason'],
                destination = Number(related_package_info['destination']),
                timestamp = related_package_info['created_at_timestamp'],
                final_destination = Number(related_package_info['final_destination']),
                barcode1_string = related_package_info['barcode1_string'];


            timestamp = moment.unix(timestamp).format("MMM D, H:mm")

            // let destination_txt = destination_to_bin(destination);
            // let final_destination_txt = destination_to_bin(final_destination);

            //sorting_code_txt = sorting_codes[sorting_code];
            sorting_code_txt = '';
            for (k in sorting_codes){
                let sc = sorting_codes[k];
                if(sc.value == sorting_code){
                    sorting_code_txt = sc.label;
                }
            }

            //console.log("ts: " + timestamp + " m: " + mail_id + " l: " + length + " b_s: "+ barcode_string + " r_c: " + reject_code + " s_c: " + sorting_code_txt + " ds: " + destination_txt + " fds: " + final_destination_txt);

            // <th>Timestamp</th>
            // <th>MailId</th>
            // <th>Length</th>
            // <th>RejectCode</th>
            // <th>SortedCode</th>
            // <th>Destination</th>
            // <th>FinalDestination</th>
            // table_html+='<tr>' +
            //     '<td>' + timestamp + '</td>' +
            //     '<td>' + mail_id + '</td>' +
            //     '<td>' + length + '</td>' +
            //     '<td>' + barcode1_string + '</td>' +
            //     '<td>' + sorting_code_txt + '</td>' +
            //     '<td>' + destination + '</td>' +
            //     '<td>' + final_destination + '</td>' +
            //     '</tr>';
            // products.push({timestamp,
            //     mail_id,
            //     length,
            //     barcode1_string,
            //     sorting_code_txt,
            //     destination,
            //     final_destination});
            data_table.row.add([
                timestamp,
                mail_id,
                length,
                barcode1_string,
                sorting_code_txt,
                destination,
                final_destination
            ]);
        }

        if(current_page==1){
            page_html+= '<li class="page-item disabled"><button class="page-link page-prev" href="#" aria-label="Previous"><span aria-hidden="true">&laquo;</span></button></li>';
        } else {
            page_html+= '<li class="page-item"><button class="page-link page-prev" href="#" aria-label="Previous"><span aria-hidden="true">&laquo;</span></button></li>';
        }

       // for (let i=1;i<=total_pages;i++){
       //     page_html+=`<li class="page-item"><a class="page-link" href="#">${i}</a></li>`;
       // }

        // products.forEach(p=> {
        //     data_table.row.add([
        //         p.timestamp,
        //         p.mail_id,
        //         p.length,
        //         p.barcode1_string,
        //         p.sorting_code_txt,
        //         p.destination,
        //         p.final_destination
        //     ]);
        // })

        data_table.draw();
        if(total_pages>6){
            if(current_page>=5 && current_page+4 < total_pages){
                page_html+=`<li class="page-item"><button class="page-link page-btn" data-page-no=${1} href="#">1</button></li>`;
                page_html+=`<li class="page-item disabled"><button class="page-link" href="#">...</button></li>`;
                page_html+=`<li class="page-item"><button class="page-link page-btn" data-page-no=${current_page-1} href="#">${current_page-1}</button></li>`;
                page_html+=`<li class="page-item active"><button class="page-link page-btn" data-page-no=${current_page} href="#">${current_page}</button></li>`;
                page_html+=`<li class="page-item"><button class="page-link page-btn" data-page-no=${current_page+1} href="#">${current_page+1}</button></li>`;
                page_html+=`<li class="page-item disabled"><button class="page-link" href="#">...</button></li>`;
                page_html+=`<li class="page-item"><button class="page-link page-btn" data-page-no=${total_pages} href="#">${total_pages}</button></li>`;
            } else if (current_page>=5 && current_page+4 >= total_pages){
                page_html+=`<li class="page-item"><button class="page-link page-btn" data-page-no=${1} href="#">1</button></li>`;
                page_html+=`<li class="page-item disabled"><button class="page-link" href="#">...</button></li>`;
                for (let p=total_pages-4;p<=total_pages;p++){
                    if(p== current_page){
                        page_html+=`<li class="page-item active"><button class="page-link page-btn" data-page-no=${p} href="#">${p}</button></li>`;
                    }
                    else {
                        page_html+=`<li class="page-item"><button class="page-link page-btn" data-page-no=${p} href="#">${p}</button></li>`;
                    }
                }

            } else {
                for (let p=1;p<=5;p++){
                    if(p== current_page){
                        page_html+=`<li class="page-item active"><button class="page-link page-btn" data-page-no=${p} href="#">${p}</button></li>`;
                    }
                    else {
                        page_html+=`<li class="page-item"><button class="page-link page-btn" data-page-no=${p} href="#">${p}</button></li>`;
                    }
                }
                page_html+=`<li class="page-item disabled"><button class="page-link" href="#">...</button></li>`;
                page_html+=`<li class="page-item"><button class="page-link page-btn" data-page-no=${total_pages} href="#">${total_pages}</button></li>`;
            }
        } else {
            for (let p=1;p<=total_pages;p++){
                if(p== current_page){
                    page_html+=`<li class="page-item active"><button class="page-link page-btn" data-page-no=${p} href="#">${p}</button></li>`;
                }
                else {
                    page_html+=`<li class="page-item"><button class="page-link page-btn" data-page-no=${p} href="#">${p}</button></li>`;
                }
            }
        }
        if(current_page==total_pages){
            page_html+= '<li class="page-item disabled"><button class="page-link page-next" href="#" aria-label="Next"><span aria-hidden="true">&raquo;</span></button></li>';
        } else {
            page_html+= '<li class="page-item"><button class="page-link page-next" href="#" aria-label="Previous"><span aria-hidden="true">&raquo;</span></button></li>';
        }
        $('#page-wrapper').empty();
        $('#page-wrapper').append(page_html);

        $('.page-btn').click(function (e) {
            if(current_page !== Number($(this).data('pageNo'))) {
                ipcRenderer.send("sendRequest", selected_machine, 'getProductsHistory', {
                    'page':Number($(this).data('pageNo')),
                    'per_page':per_page,
                    'from_timestamp': start_time,
                    'to_timestamp': end_time,
                });
            }
        });
        $('.page-prev').click(function (e) {
            ipcRenderer.send("sendRequest", selected_machine, 'getProductsHistory', {
                'page':current_page-1,
                'per_page':per_page,
                'from_timestamp': start_time,
                'to_timestamp': end_time,
            });
        });
        $('.page-next').click(function (e) {
            ipcRenderer.send("sendRequest", selected_machine, 'getProductsHistory', {
                'page':current_page+1,
                'per_page':per_page,
                'from_timestamp': start_time,
                'to_timestamp': end_time,
            });
        });
        $('#token_table_info').html(`Showing ${(current_page*per_page)-(per_page-1)} to ${current_page*per_page >total_records ? total_records: current_page*per_page} of ${total_records} entries`);


        /* data_table.columns().every(function () {
            var column = this;

            if (column.index() === 3 || column.index() === 4) {
                let select_txt = "";
                let select_id = "";
                if(column.index() === 3) {
                    select_txt = "Select reject code";
                    select_id = "#reject_code_filter";
                    jQuery(select_id).empty().append('<option value="">'+ select_txt +'</option>').val('');
                } else {
                    select_txt = "Select sorting code";
                    select_id = "#sorting_code_filter";
                    jQuery(select_id).empty().append('<option value="">'+ select_txt +'</option>').val('');
                }

                let select = $(select_id);
                column.data().unique().sort().each(function (d, j) {
                    //console.log(d);
                    select.append('<option value="' + d + '">' + d + '</option>')
                });
            }
        }); */

        // jQuery("#head-loader").html('Packages');
    });

</script>
</body>
</html>
