<%- include('header', {currentMenu: 'general-view', pageTitle: 'General View'}); %>
    <div class="row m-0 mt-1">
        <div class="col-4" style="padding:0 50px;text-align: center;">
			<%- include('resources/general-view-colors.svg') %>
        </div>
		<div class="col-8" style="padding:0 10px;text-align: center;">
			<%- include('resources/general-view.svg') %>
		</div>
    </div>
    <div class="row m-0">
        <div class="col-lg-12 pt-0 pb-0 pl-2 pr-2 mt-2">
            <table class="table table-sm table-bordered" id="details_active_alarms_table">
                <thead>
                <tr>
                    <th width="20%">Timestamp</th>
                    <th width="10%">Duration</th>
                    <th width="10%">Class</th>
                    <th width="10%">Location</th>
                    <th width="20%">Description</th>
                    <th width="20%">Variable Name</th>
                </tr>
                </thead>
                <tbody id="active_alarm_tbody">
                    <tr>
                        <td colspan="6">No active alarm to display</td>
                    </tr>
                </tbody>
            </table>
			<div class="row" id="marquee1">
				<div class="col-lg-12">
					<ul id="alarm-ticker"></ul>
				</div>
			</div>
        </div>
    </div>
</div>
<%- include('footer', {currentMenu: 'general-view'}); %>
<script src="js/jquery-bootstrap.js"></script>
<script src="js/nav.js"></script>
<script src="js/jquery.newsTicker.js"></script>

<script>
// let machine_mode = 9;
// let current_bin_status_list = {};
let detailed_active_alarm_settings_value = "";
async function loadDetailedActiveAlarmSettingsValue() {
	detailed_active_alarm_settings_value = await ipcRenderer.invoke('getSingleStoreValue', 'adta_detailed_active_alarm');

	if(detailed_active_alarm_settings_value === "active") {
		jQuery("#marquee1").hide();
		jQuery("#details_active_alarms_table").show();
	} else {
		jQuery("#details_active_alarms_table").hide();
		jQuery("#marquee1").show();
	}
}
//
// function awNotice() {
// 	var $active = $('#ticker1 a.active');
// 	var $next = $active.next('a');
//
// 	if ($next.length){
// 		$next.addClass('active');
// 		$active.removeClass('active');
// 	} else {
// 		$active.removeClass('active');
// 		$('#ticker1 a:first-of-type').addClass('active');
// 	}
// }
//
// function awNotices(timer){
//     setInterval( "awNotice()", timer);
// }
//
// function awNotice2() {
// 	var $active = $('#ticker2 a.active');
// 	var $next = $active.next('a');
//
// 	if ($next.length){
// 		$next.addClass('active');
// 		$active.removeClass('active');
// 	} else {
// 		$active.removeClass('active');
// 		$('#ticker2 a:first-of-type').addClass('active');
// 	}
// }
//
// function awNotices2(timer){
//     setInterval( "awNotice2()", timer);
// }
//
// let alarm_class_to_names = {"0" : "Error", "1" : "Warning", "2" : "Message"};

// let old_tickers = [], new_tickers = [];
// var local_ip_address = getIPAddress();
// let inducts_current_status = {
// 	"induct-1" : 99,
// 	"induct-2" : 99,
// 	"induct-3" : 99,
// 	"induct-4" : 99,
// 	"induct-5" : 99,
// 	"induct-6" : 99,
// 	"induct-7" : 99,
// };
//
// var inducts_gui_to_actual_id = {
// 	1: {
// 		"id": 7,
// 		"name" : "Priority Pak Induct 5"
// 	},
// 	2: {
// 		"id": 6,
// 		"name" : "Priority Pak Induct 4"
// 	},
// 	3: {
// 		"id": 5,
// 		"name" : "Priority Pak Induct 3"
// 	},
// 	4: {
// 		"id": 4,
// 		"name" : "Priority Pak Induct 2"
// 	},
// 	5: {
// 		"id": 3,
// 		"name" : "Priority Pak Induct 1"
// 	},
// 	6: {
// 		"id": 2,
// 		"name" : "Tfold Induct 2"
// 	},
// 	7: {
// 		"id": 1,
// 		"name" : "Tfold Induct 1"
// 	},
// };
//
// var alarm_ticker = $('#alarm-ticker').newsTicker({
// 	row_height: 100,
// 	max_rows: 2,
// 	duration: 4000,
// 	pauseOnHover: 0
// });

jQuery(document).ready(function() {
	$('[data-toggle="tooltip"]').tooltip();
	loadDetailedActiveAlarmSettingsValue();
	
    jQuery("#ip_list_dropdown").change(function() {
        selected_machine = jQuery(this).val();
        if(selected_machine !== "") {
            let selected_machine_name = machine_list[selected_machine];
            jQuery("#display_machine_name").text(selected_machine_name);
        }
        else {
            jQuery("#display_machine_name").text("Select a machine");
            selected_machine = 0;
        }
        ipcRenderer.send("get:views", selected_machine, "general_view");
    });
});

ipcRenderer.on("render:general_view", function(e, data) {
    setBinLabel(data['binsInfo']);
    setPhotoeyeLabel(data['inputsInfo']);
    setConveyorLabel(data['conveyorsInfo']);

    $('.bin.cursor-pointer').on('click',function (){
        let key=$(this).attr('bin-key');
        //console.log(data['binsInfo'][key])
        ipcRenderer.send("render:binDetails", selected_machine,key);
    })
    setInterval(() => {
        ipcRenderer.send("getGeneralViewData", selected_machine);
    }, 1000);
});
ipcRenderer.on("getGeneralViewData", function(e, data) {
    let bin_colors = {
        "1" : "#27e22b",
        "2" : "#27e22b",
        "3" : "#ffc000",
        "4" : "#cccccc",//#e6e7e8
        "5" : "#4d80ff",
        "6" : "#cccccc",//#e6e7e8
        "7" : "#ff0000",
        "8" : "#c55a11",
    };
    let machineId=data['machineId'];
    let binsStates=data['binsStates'];
    for(let bin_id in binsStates){
        $('.bin[bin-key='+machineId+'_'+bin_id+'] rect').css('fill',bin_colors[binsStates[bin_id]]);
    }
    let conveyor_colors = { "0" : "#ccc",  "1" : "#27e22b", "2" : "#ffc000", "3" : "red"};
    let conveyorsStates=data['conveyorsStates'];
    for(let conveyor_id in conveyorsStates){
        $('.conveyor[conveyor-id='+conveyor_id+'] .conveyor_border').css('fill',conveyor_colors[conveyorsStates[conveyor_id]]);
    }
});
</script>
</body>
</html>